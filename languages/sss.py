from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from language_manager import LanguageManager, LANG_UZ_LATIN, LANG_UZ_CYRILLIC, LANG_RU, LANG_KZ, LANG_KG, \
	DEFAULT_LANGUAGE

def create_language_keyboard():
	"""Create an inline keyboard for language selection"""
	from language_manager import LANG_UZ_LATIN, LANG_UZ_CYRILLIC, LANG_RU, LANG_KZ, LANG_KG
	
	keyboard = InlineKeyboardMarkup(
		inline_keyboard=[
			[InlineKeyboardButton(text="üá∫üáø O'zbek (Latin)", callback_data=f"lang_{LANG_UZ_LATIN}")],
			[InlineKeyboardButton(text="üá∫üáø –é–∑–±–µ–∫ (–ö–∏—Ä–∏–ª–ª)", callback_data=f"lang_{LANG_UZ_CYRILLIC}")],
			[InlineKeyboardButton(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π", callback_data=f"lang_{LANG_RU}")],
			[InlineKeyboardButton(text="üá∞üáø “ö–∞–∑–∞“õ—à–∞", callback_data=f"lang_{LANG_KZ}")],
			[InlineKeyboardButton(text="üá∞üá¨ –ö—ã—Ä–≥—ã–∑—á–∞", callback_data=f"lang_{LANG_KG}")]
		]
	)
	return keyboard

def create_main_keyboard(lang_code, lang_manager):
	"""Create the main keyboard with text in the specified language"""
	return ReplyKeyboardMarkup(
		keyboard=[
			[KeyboardButton(text=lang_manager.get_text(lang_code, "prayer_times"))],
			[KeyboardButton(text=lang_manager.get_text(lang_code, "quran")),
			 KeyboardButton(text=lang_manager.get_text(lang_code, "qibla"))],
			[KeyboardButton(text=lang_manager.get_text(lang_code, "location_settings")),
			 KeyboardButton(text=lang_manager.get_text(lang_code, "organ"))],
			[KeyboardButton(text=lang_manager.get_text(lang_code, "language")),
			 KeyboardButton(text=lang_manager.get_text(lang_code, "help"))]
		],
		resize_keyboard=True
	)

def create_location_keyboard(lang_code, lang_manager):
	"""Create the location keyboard with text in the specified language"""
	return ReplyKeyboardMarkup(
		keyboard=[
			[KeyboardButton(
				text=lang_manager.get_text(lang_code, "send_location"),
				request_location=True
			)],
			[KeyboardButton(text=lang_manager.get_text(lang_code, "cancel"))]
		],
		resize_keyboard=True
	)

def create_admin_keyboard(lang_code, lang_manager):
	"""Create the admin keyboard with text in the specified language"""
	# For admin panel, we'll use fixed Uzbek text as requested
	return ReplyKeyboardMarkup(
		keyboard=[
			[KeyboardButton(text="üìä Statistika"),
			 KeyboardButton(text="üì¢ Xabar yuborish")],
			[KeyboardButton(text="üì£ Majburiy kanal"),
			 KeyboardButton(text="üîÑ Kanalni o'chirish")],
			[KeyboardButton(text="üîô Orqaga")]
		],
		resize_keyboard=True
	)

def create_cancel_keyboard(lang_code, lang_manager):
	"""Create the cancel keyboard with text in the specified language"""
	return ReplyKeyboardMarkup(
		keyboard=[
			[KeyboardButton(text=lang_manager.get_text(lang_code, "cancel"))]
		],
		resize_keyboard=True
	)

def create_help_keyboard(lang_code, lang_manager):
	"""Create the help keyboard with text in the specified language"""
	return InlineKeyboardMarkup(
		inline_keyboard=[
			[InlineKeyboardButton(text="üïã " + lang_manager.get_text(lang_code, "help_prayer"),
			                      callback_data="help_prayer")],
			[InlineKeyboardButton(text="üì± " + lang_manager.get_text(lang_code, "help_bot"),
			                      callback_data="help_bot")],
			[InlineKeyboardButton(text="üîç " + lang_manager.get_text(lang_code, "help_sources"),
			                      callback_data="help_sources")],
			[InlineKeyboardButton(text="üìö " + lang_manager.get_text(lang_code, "help_resources"),
			                      callback_data="help_resources")],
			[InlineKeyboardButton(ext=lang_manager.get_text(lang_code, "taklif"),
			                      url="https://t.me/roobotmee")],
			[InlineKeyboardButton(text="" + lang_manager.get_text(lang_code, "developer"),
			                      web_app=WebAppInfo(url="https://roobotmee.uz"))]
		]
	
	)

def create_quran_keyboard(page=1, lang_code=None, lang_manager=None):
	"""Create Quran keyboard with pagination and 3 columns"""
	from quron_data import QURAN_SURAHS
	
	# Calculate start and end indices for current page
	items_per_page = 30  # Increased to show more surahs per page
	start_idx = (page - 1) * items_per_page
	end_idx = min(start_idx + items_per_page, len(QURAN_SURAHS))
	
	# Get surahs for current page
	current_surahs = QURAN_SURAHS[start_idx:end_idx]
	
	# Create buttons for each surah in 3 columns
	surah_buttons = []
	row = []
	
	for i, surah in enumerate(current_surahs):
		# Add button to current row
		row.append(
			InlineKeyboardButton(
				text=f"üìö {surah['number']}. {surah['name_uz']}",
				callback_data=f"quran_{surah['number']}"
			)
		)
		
		# After adding 3 buttons or at the end of the list, append the row
		if len(row) == 3 or i == len(current_surahs) - 1:
			surah_buttons.append(row)
			row = []  # Reset row for next set of buttons
	
	# Add navigation buttons
	nav_buttons = []
	
	# Add previous page button if not on first page
	if page > 1:
		prev_text = "‚¨ÖÔ∏è Oldingi"
		if lang_manager and lang_code:
			prev_text = "‚¨ÖÔ∏è " + lang_manager.get_text(lang_code, "previous")
		
		nav_buttons.append(
			InlineKeyboardButton(
				text=prev_text,
				callback_data=f"quran_page_{page - 1}"
			)
		)
	
	# Add info button
	info_text = "‚ÑπÔ∏è Info"
	if lang_manager and lang_code:
		info_text = "‚ÑπÔ∏è " + lang_manager.get_text(lang_code, "info")
	
	nav_buttons.append(
		InlineKeyboardButton(
			text=info_text,
			callback_data="quran_info"
		)
	)
	
	# Add next page button if not on last page
	if end_idx < len(QURAN_SURAHS):
		next_text = "Keyingi ‚û°Ô∏è"
		if lang_manager and lang_code:
			next_text = lang_manager.get_text(lang_code, "next") + " ‚û°Ô∏è"
		
		nav_buttons.append(
			InlineKeyboardButton(
				text=next_text,
				callback_data=f"quran_page_{page + 1}"
			)
		)
	
	# Add back button
	back_text = "üîô Orqaga"
	if lang_manager and lang_code:
		back_text = "üîô " + lang_manager.get_text(lang_code, "back")
	
	back_button = [
		InlineKeyboardButton(
			text=back_text,
			callback_data="quran_back"
		)
	]
	
	# Combine all buttons
	keyboard = InlineKeyboardMarkup(
		inline_keyboard=surah_buttons + [nav_buttons] + [back_button]
	)
	
	return keyboard

# Update the create_organ_keyboard function to use 2 columns
def create_organ_keyboard(lang_code=None, lang_manager=None):
	"""Create the organ features keyboard with text in the specified language"""
	# Default texts if language manager is not provided (in Uzbek)
	hadith_text = "üìú Hadislar"
	dhikr_text = "üìø Zikrlar"
	quran_text = "üìñ Qur'on"
	dua_text = "ü§≤ Duolar"
	sadaqa_text = "üí∞ Sadaqa"
	halal_text = "üçΩ Halol"
	namaz_text = "üïã Namoz"
	ramadan_text = "üåô Ramazon"
	tasbeh_text = "üìø Tasbeh"
	names_text = "üë∂ Ismlar"
	holidays_text = "üìÖ Bayramlar"
	qibla_text = "üß≠ Qibla"
	back_text = "üîô Orqaga"
	
	# If language manager and code are provided, get translated texts
	if lang_manager and lang_code:
		if lang_code == LANG_RU:
			hadith_text = "üìú –•–∞–¥–∏—Å—ã"
			dhikr_text = "üìø –ó–∏–∫—Ä—ã"
			quran_text = "üìñ –ö–æ—Ä–∞–Ω"
			dua_text = "ü§≤ –î—É–∞"
			sadaqa_text = "üí∞ –°–∞–¥–∞–∫–∞"
			halal_text = "üçΩ –•–∞–ª—è–ª—å"
			namaz_text = "üïã –ù–∞–º–∞–∑"
			ramadan_text = "üåô –†–∞–º–∞–¥–∞–Ω"
			tasbeh_text = "üìø –¢–∞—Å–±–∏—Ö"
			names_text = "üë∂ –ò–º–µ–Ω–∞"
			holidays_text = "üìÖ –ü—Ä–∞–∑–¥–Ω–∏–∫–∏"
			qibla_text = "üß≠ –ö–∏–±–ª–∞"
			back_text = "üîô –ù–∞–∑–∞–¥"
		elif lang_code == LANG_UZ_CYRILLIC:
			hadith_text = "üìú “≤–∞–¥–∏—Å–ª–∞—Ä"
			dhikr_text = "üìø –ó–∏–∫—Ä–ª–∞—Ä"
			quran_text = "üìñ “ö—É—Ä—ä–æ–Ω"
			dua_text = "ü§≤ –î—É–æ–ª–∞—Ä"
			sadaqa_text = "üí∞ –°–∞–¥–∞“õ–∞"
			halal_text = "üçΩ “≤–∞–ª–æ–ª"
			namaz_text = "üïã –ù–∞–º–æ–∑"
			ramadan_text = "üåô –†–∞–º–∞–∑–æ–Ω"
			tasbeh_text = "üìø –¢–∞—Å–±–µ“≥"
			names_text = "üë∂ –ò—Å–º–ª–∞—Ä"
			holidays_text = "üìÖ –ë–∞–π—Ä–∞–º–ª–∞—Ä"
			qibla_text = "üß≠ “ö–∏–±–ª–∞"
			back_text = "üîô –û—Ä“õ–∞–≥–∞"
		elif lang_code == LANG_KZ:
			hadith_text = "üìú –•–∞–¥–∏—Å—Ç–µ—Ä"
			dhikr_text = "üìø –ó—ñ–∫—ñ—Ä–ª–µ—Ä"
			quran_text = "üìñ “ö“±—Ä–∞–Ω"
			dua_text = "ü§≤ –î“±“ì–∞–ª–∞—Ä"
			sadaqa_text = "üí∞ –°–∞–¥–∞“õ–∞"
			halal_text = "üçΩ –•–∞–ª–∞–ª"
			namaz_text = "üïã –ù–∞–º–∞–∑"
			ramadan_text = "üåô –†–∞–º–∞–∑–∞–Ω"
			tasbeh_text = "üìø –¢”ô—Å–±–∏—Ö"
			names_text = "üë∂ –ï—Å—ñ–º–¥–µ—Ä"
			holidays_text = "üìÖ –ú–µ–π—Ä–∞–º–¥–∞—Ä"
			qibla_text = "üß≠ “ö“±–±—ã–ª–∞"
			back_text = "üîô –ê—Ä—Ç“õ–∞"
		elif lang_code == LANG_KG:
			hadith_text = "üìú –•–∞–¥–∏—Å—Ç–µ—Ä"
			dhikr_text = "üìø –ó–∏–∫–∏—Ä–ª–µ—Ä"
			quran_text = "üìñ –ö—É—Ä–∞–Ω"
			dua_text = "ü§≤ –î—É–±–∞–ª–∞—Ä"
			sadaqa_text = "üí∞ –°–∞–¥–∞–∫–∞"
			halal_text = "üçΩ –•–∞–ª–∞–ª"
			namaz_text = "üïã –ù–∞–º–∞–∑"
			ramadan_text = "üåô –†–∞–º–∞–∑–∞–Ω"
			tasbeh_text = "üìø –¢–∞—Å–±–∏—Ö"
			names_text = "üë∂ –´—Å—ã–º–¥–∞—Ä"
			holidays_text = "üìÖ –ú–∞–π—Ä–∞–º–¥–∞—Ä"
			qibla_text = "üß≠ –ö—ã–±—ã–ª–∞"
			back_text = "üîô –ê—Ä—Ç–∫–∞"
	
	# Create a 2-column layout
	keyboard = InlineKeyboardMarkup(
		inline_keyboard=[
			[
				InlineKeyboardButton(text=hadith_text, callback_data="organ_hadith"),
				InlineKeyboardButton(text=dhikr_text, callback_data="organ_dhikr")
			],
			[
				InlineKeyboardButton(text=quran_text, callback_data="organ_audio_quran"),
				InlineKeyboardButton(text=dua_text, callback_data="organ_dua")
			],
			[
				InlineKeyboardButton(text=sadaqa_text, callback_data="organ_sadaqa"),
				InlineKeyboardButton(text=halal_text, callback_data="organ_halal")
			],
			[
				InlineKeyboardButton(text=namaz_text, callback_data="organ_namaz"),
				InlineKeyboardButton(text=ramadan_text, callback_data="organ_ramadan")
			],
			[
				InlineKeyboardButton(text=tasbeh_text, callback_data="organ_tasbeh"),
				InlineKeyboardButton(text=names_text, callback_data="organ_names")
			],
			[
				InlineKeyboardButton(text=holidays_text, callback_data="organ_holidays"),
				InlineKeyboardButton(text=qibla_text, callback_data="organ_qibla")
			],
			[InlineKeyboardButton(text=back_text, callback_data="organ_back")]
		]
	)
	return keyboard

